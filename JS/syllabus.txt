
1) introduction

2) variables

3) functions

    => named functions

    => arrow functions

    => rest parameters in functions

    => optional parameters in functions

    => generator functions

    => IIFE (Immidiate Invokable Functional Expressions)

    => constructor functions    (prototype) (prototype chaining)
        --
        --
        --

4) arrays manipulations

5) JSON

6) AJAX Calls     (JQuery)

7) CallBacks

        callback hell

8) Promises

    async & await

9) Debouncing

10) Throtting

11) call(), apply() and bind()

12) DOM Manipulations

13) Debugging of JavaScript Applications


-----
-----
-----

introduction
************
    => JavaScript is the Scripting Language

    => JavaScript Released by Netscape

    => Current Version of JavaScript is ES12

    => ES Stands for ECMA Script

    => JavaScript used to convert the Static Web Pages to Dynamic Web Pages

    => JavaScript used to build the Angular,React,NodeJS,VueJS,......

    => we will save JavaScript files with ".js" extension

    => we will include JavaScript to webpages with <Script></Script> tag

    => Visual Studio Code is the Suggestable IDE to build the JavaScript Applications.

    => we can execute JavaScript in two ways.

            1) Intrepreter

            2) node

    => Intrepreter present in Browser Engine

    => node tool present in NodeJS.

    => JavaScript is the "Object Based" Scripting Language

    => Vendor provided so many predefined objects, so as a developer we can use predefined objects.

    Ex.
            console

            document

            window

            Date

            Time

            ----
            ----
            ----

    => JavaScript execution is Synchronous Execution

    => either Intrepreter or node tool, will execute JavaScript Code line by line.


Software Installations
**********************
1) download and install NodeJS

        NodeJS contains node tool

        node tool, helps to execute the JavaScript

website : https://nodejs.org/en/download/

file    : node-v16.13.2-x64.msix


2) download and install Visual Studio Code


        Visual Studio Code given by Microsoft

        Visual Studio Code also called as VSCode

        VSCode IDE is open source IDE.

website : https://code.visualstudio.com/docs/?dv=win

file     : VSCodeUserSetup-x64-1.63.2.exe



Execution of JavaScript
***********************

> node  demo.js


functions
*********
        - particular "business logic" called as "function"

        - functions are used to "reuse" the business logic

        - we have following types of functions

                1) Named Functions

                2) Anonymous Functions / Arrow Functions / Lamda Functions / CallBack Functions / Nameless Functions

                3) Rest Parameters in Functions

                4) Default Parameters in Functions

                5) Optional Parameters in Functions

                6) IIFE (Immidiate Invokable Functional Expression)

                7) Generator Functions

                8) Constructor Functions

Named Functions
***************
        The function with the name called as "Named Function".

        we will define named functions with "function" keyword

        Syntax
        ******
        1) function definition

        2) function calling

        function definition
        *******************
        function funactionname(param1,param2,param3,param4,.....paramn){
                //business logic
        }

        function calling
        ****************
        funactionname(arg1,arg2,arg3,arg4,......arg n);


Anonymous Functions
*******************
        - The function without name called as "Anonymous" function.

        - Anonymous functions also called as "arrow" functions

        - we will represent arrow functions with the help of "=>"

        - arrow functions behaves like "callback" functions.

        Syntax
        ******

        1) function definition

        2) function calling

        function definition
        *******************
        let variablename = (param1,param2,param3,....paramn)=>{
                //business logic
        }


        call the function
        *****************
        variablename(arg1,arg2,arg3,.....arg n);


Rest Parameters in Functions
****************************
        Rest Parameters in functions, used to store the more than "one value" in a single parameter

        we will represent Rest Parameter with "..." symbol

        "..." symbol called as spread operator/rest parameter

        we can have only "one spread operator" per functions

        occurance of spread operator should be last in parameters



Default Parameters in functions
*******************************
        - while defining the functions, parameters initilized with Default values

        - this concept also introduced in ES6



optional parameters in functions
********************************
        - while calling the functions we will make few arguments are "optional"

        - optional parameters will work in "TypeScript" Environment

        - TypeScript is the "programming" language

        - TypeScript Released by "Microsoft"

        - TypeScript follows the "OOPS".

        - we will represent optional parameters with "?"

        - we will install TypeScript by using following command

                > npm install -g typescript

                "npm" stands for node packaging manager

                "npm" present in NodeJS

                -g stands for global installation

        - we will save the TypeScript files with ".ts" extension

        - in general, browsers unable to understand TypeScript.

        - so, as a developer we must convert TypeScript to Equalent JavaScript

        - conversion of TypeScript to Equalent JavaScript called as Transpilation

        - "tsc" is the tool used to perform Transpilation

        - "tsc" stands for TypeScript Compiler


        > tsc demo.ts

              o/p

          demo.js 

        > node demo.js 


arrays
******
        collection of "indexed" elements called as "array"

        we will represent the arrays with "[]"

        index starts from "0"

        we will access "array" elements with "indexes"
























































































































































































































  







